- name: get home directory of Ansible runner
  shell: "echo $HOME"
  register: ansible_runner_home

- name: Install required packages
  apt:
    update_cache: true
    pkg:
      - python-is-python3
      - python3-venv
      - python3-pip

- name: Init Python venv
  shell: python -m venv {{ node_user_home }}/env
  args:
    creates: '{{ node_user_home }}/env/bin/activate'
  become_user: '{{ node_user }}'

- name: Install toml
  pip:
    virtualenv: '{{ node_user_home }}/env'
    virtualenv_python: python3
    state: latest
    name:
      - toml_cli
  become_user: '{{ node_user }}'

- name: Configure {{ chain_home }}/config/config.toml
  shell: |
    {{ node_user_home }}/env/bin/toml set --toml-path {{ chain_home }}/config/config.toml {{ config_toml[count].key }} {{ config_toml[count].value }} {{ config_toml[count].toml_cli_args }}
  become_user: '{{ node_user }}'
  when: config_toml is defined
  loop: "{{ config_toml }}"
  loop_control:
    index_var: count

- name: Configure {{ chain_home }}/config/app.toml
  shell: |
    {{ node_user_home }}/env/bin/toml set --toml-path {{ chain_home }}/config/app.toml {{ app_toml[count].key }} {{ app_toml[count].value }} {{ app_toml[count].toml_cli_args }}
  become_user: '{{ node_user }}'
  when: app_toml is defined
  loop: "{{ app_toml }}"
  loop_control:
    index_var: count

- name: Configure {{ chain_home }}/config/client.toml
  shell: |
    {{ node_user_home }}/env/bin/toml set --toml-path {{ chain_home }}/config/client.toml {{ client_toml[count].key }} {{ client_toml[count].value }} {{ client_toml[count].toml_cli_args }}
  become_user: '{{ node_user }}'
  when: client_toml is defined
  loop: "{{ client_toml }}"
  loop_control:
    index_var: count